{"ast":null,"code":"import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\nexport default (async (state = {}, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      // first search the coffees to find the specific coffee - addedItem\n      let addedCoffee = await coffees.get(`/coffees?id=${action.payload.id}`); // check if item id exists in added items\n\n      let cartArray = await coffees.get(`/cart?id=${action.payload.id}`);\n      let itemInCart = cartArray.data[0]; // ** Need to copy the whole object using ... for immutability\n      // if it does, update quantity and total price\n\n      if (itemInCart && itemInCart.id === action.payload.id) {\n        console.log('item exists'); // take state (empty obj) and copy everything from responseData into state\n        // then add the addedCoffee into there\n      } else {\n        // otherwise, add new item to added items where quntity = 1 and add to total price\n        console.log('item not in cart');\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/reducers/cartReducer.js"],"names":["coffees","ADD_TO_CART","state","action","type","addedCoffee","get","payload","id","cartArray","itemInCart","data","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,gBAAe,OAAOC,KAAK,GAAG,EAAf,EAAmBC,MAAnB,KAA8B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKH,WAAL;AACC;AACA,UAAII,WAAW,GAAG,MAAML,OAAO,CAACM,GAAR,CACtB,eAAcH,MAAM,CAACI,OAAP,CAAeC,EAAG,EADV,CAAxB,CAFD,CAKC;;AACA,UAAIC,SAAS,GAAG,MAAMT,OAAO,CAACM,GAAR,CAAa,YAAWH,MAAM,CAACI,OAAP,CAAeC,EAAG,EAA1C,CAAtB;AAEA,UAAIE,UAAU,GAAGD,SAAS,CAACE,IAAV,CAAe,CAAf,CAAjB,CARD,CAUC;AAEA;;AACA,UAAID,UAAU,IAAIA,UAAU,CAACF,EAAX,KAAkBL,MAAM,CAACI,OAAP,CAAeC,EAAnD,EAAuD;AACtDI,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADsD,CAEtD;AACA;AACA,OAJD,MAIO;AACN;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACF;AACC,aAAOX,KAAP;AAvBF;AAyBA,CA1BD","sourcesContent":["import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\n\nexport default async (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_CART:\n\t\t\t// first search the coffees to find the specific coffee - addedItem\n\t\t\tlet addedCoffee = await coffees.get(\n\t\t\t\t`/coffees?id=${action.payload.id}`\n\t\t\t);\n\t\t\t// check if item id exists in added items\n\t\t\tlet cartArray = await coffees.get(`/cart?id=${action.payload.id}`);\n\n\t\t\tlet itemInCart = cartArray.data[0];\n\n\t\t\t// ** Need to copy the whole object using ... for immutability\n\n\t\t\t// if it does, update quantity and total price\n\t\t\tif (itemInCart && itemInCart.id === action.payload.id) {\n\t\t\t\tconsole.log('item exists');\n\t\t\t\t// take state (empty obj) and copy everything from responseData into state\n\t\t\t\t// then add the addedCoffee into there\n\t\t\t} else {\n\t\t\t\t// otherwise, add new item to added items where quntity = 1 and add to total price\n\t\t\t\tconsole.log('item not in cart');\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}