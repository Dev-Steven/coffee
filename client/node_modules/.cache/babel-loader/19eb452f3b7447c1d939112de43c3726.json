{"ast":null,"code":"import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\nimport _ from 'lodash';\nexport const addToCart = id => async dispatch => {\n  const responseCart = await coffees.get('/cart');\n  const cart = responseCart.data;\n  const responseCoffees = await coffees.get('/coffees');\n  const selectedCoffee = responseCoffees.data.find(coffee => coffee.id === id);\n  let itemExist = cart.items.find(item => item.id === id); // deep copy to add new property quantity, will eventually add into items array in cart :)\n\n  let coffeeToAdd = _.cloneDeep(selectedCoffee);\n\n  dispatch({\n    type: ADD_TO_CART // payload: { id, cart, selectedCoffee, itemExist },\n\n  });\n};","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/actions/cartActions.js"],"names":["ADD_TO_CART","coffees","_","addToCart","id","dispatch","responseCart","get","cart","data","responseCoffees","selectedCoffee","find","coffee","itemExist","items","item","coffeeToAdd","cloneDeep","type"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AAChD,QAAMC,YAAY,GAAG,MAAML,OAAO,CAACM,GAAR,CAAY,OAAZ,CAA3B;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACG,IAA1B;AAEA,QAAMC,eAAe,GAAG,MAAMT,OAAO,CAACM,GAAR,CAAY,UAAZ,CAA9B;AACA,QAAMI,cAAc,GAAGD,eAAe,CAACD,IAAhB,CAAqBG,IAArB,CACtBC,MAAM,IAAIA,MAAM,CAACT,EAAP,KAAcA,EADF,CAAvB;AAIA,MAAIU,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWH,IAAX,CAAgBI,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYA,EAApC,CAAhB,CATgD,CAWhD;;AACA,MAAIa,WAAW,GAAGf,CAAC,CAACgB,SAAF,CAAYP,cAAZ,CAAlB;;AAEAN,EAAAA,QAAQ,CAAC;AACRc,IAAAA,IAAI,EAAEnB,WADE,CAER;;AAFQ,GAAD,CAAR;AAIA,CAlBM","sourcesContent":["import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\nimport _ from 'lodash';\n\nexport const addToCart = id => async dispatch => {\n\tconst responseCart = await coffees.get('/cart');\n\tconst cart = responseCart.data;\n\n\tconst responseCoffees = await coffees.get('/coffees');\n\tconst selectedCoffee = responseCoffees.data.find(\n\t\tcoffee => coffee.id === id\n\t);\n\n\tlet itemExist = cart.items.find(item => item.id === id);\n\n\t// deep copy to add new property quantity, will eventually add into items array in cart :)\n\tlet coffeeToAdd = _.cloneDeep(selectedCoffee);\n\n\tdispatch({\n\t\ttype: ADD_TO_CART,\n\t\t// payload: { id, cart, selectedCoffee, itemExist },\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}