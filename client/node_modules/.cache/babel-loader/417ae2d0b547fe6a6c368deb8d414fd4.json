{"ast":null,"code":"import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\nimport _ from 'lodash';\nexport const addToCart = id => async dispatch => {\n  const responseCart = await coffees.get('/cart');\n  const cart = responseCart.data;\n  const responseCoffees = await coffees.get('/coffees');\n  const selectedCoffee = responseCoffees.data.find(coffee => coffee.id === id);\n  let itemExist = cart.items.find(item => item.id === id); // deep copy to add new property quantity, will eventually add into items array in cart :)\n\n  let coffeeToAdd = _.cloneDeep(selectedCoffee);\n\n  if (itemExist) {\n    // item already in cart...\n    // increase quantity property by one\n    itemExist.quantity += 1; // increase total\n\n    let newTotal = itemExist.price + cart.price;\n    let newVals = {\n      itemExist,\n      total: newTotal\n    };\n  } else {\n    // add item to cart...\n    // create new quantity property\n    coffeeToAdd.quantity = 1; // add to total\n\n    let newTotal = coffeeToAdd.price + cart.price;\n    let newVals = {\n      itemExist,\n      total: newTotal\n    };\n  }\n\n  const response = await coffees.post('/cart', {\n    id,\n    ...newVals\n  });\n  dispatch({\n    type: ADD_TO_CART // payload: { id, cart, selectedCoffee, itemExist },\n\n  });\n};","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/actions/cartActions.js"],"names":["ADD_TO_CART","coffees","_","addToCart","id","dispatch","responseCart","get","cart","data","responseCoffees","selectedCoffee","find","coffee","itemExist","items","item","coffeeToAdd","cloneDeep","quantity","newTotal","price","newVals","total","response","post","type"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AAChD,QAAMC,YAAY,GAAG,MAAML,OAAO,CAACM,GAAR,CAAY,OAAZ,CAA3B;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACG,IAA1B;AAEA,QAAMC,eAAe,GAAG,MAAMT,OAAO,CAACM,GAAR,CAAY,UAAZ,CAA9B;AACA,QAAMI,cAAc,GAAGD,eAAe,CAACD,IAAhB,CAAqBG,IAArB,CACtBC,MAAM,IAAIA,MAAM,CAACT,EAAP,KAAcA,EADF,CAAvB;AAIA,MAAIU,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWH,IAAX,CAAgBI,IAAI,IAAIA,IAAI,CAACZ,EAAL,KAAYA,EAApC,CAAhB,CATgD,CAWhD;;AACA,MAAIa,WAAW,GAAGf,CAAC,CAACgB,SAAF,CAAYP,cAAZ,CAAlB;;AAEA,MAAIG,SAAJ,EAAe;AACd;AACA;AACAA,IAAAA,SAAS,CAACK,QAAV,IAAsB,CAAtB,CAHc,CAId;;AACA,QAAIC,QAAQ,GAAGN,SAAS,CAACO,KAAV,GAAkBb,IAAI,CAACa,KAAtC;AAEA,QAAIC,OAAO,GAAG;AAAER,MAAAA,SAAF;AAAaS,MAAAA,KAAK,EAAEH;AAApB,KAAd;AACA,GARD,MAQO;AACN;AACA;AACAH,IAAAA,WAAW,CAACE,QAAZ,GAAuB,CAAvB,CAHM,CAIN;;AACA,QAAIC,QAAQ,GAAGH,WAAW,CAACI,KAAZ,GAAoBb,IAAI,CAACa,KAAxC;AAEA,QAAIC,OAAO,GAAG;AAAER,MAAAA,SAAF;AAAaS,MAAAA,KAAK,EAAEH;AAApB,KAAd;AACA;;AAED,QAAMI,QAAQ,GAAG,MAAMvB,OAAO,CAACwB,IAAR,CAAa,OAAb,EAAsB;AAAErB,IAAAA,EAAF;AAAM,OAAGkB;AAAT,GAAtB,CAAvB;AAEAjB,EAAAA,QAAQ,CAAC;AACRqB,IAAAA,IAAI,EAAE1B,WADE,CAER;;AAFQ,GAAD,CAAR;AAIA,CAtCM","sourcesContent":["import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\nimport _ from 'lodash';\n\nexport const addToCart = id => async dispatch => {\n\tconst responseCart = await coffees.get('/cart');\n\tconst cart = responseCart.data;\n\n\tconst responseCoffees = await coffees.get('/coffees');\n\tconst selectedCoffee = responseCoffees.data.find(\n\t\tcoffee => coffee.id === id\n\t);\n\n\tlet itemExist = cart.items.find(item => item.id === id);\n\n\t// deep copy to add new property quantity, will eventually add into items array in cart :)\n\tlet coffeeToAdd = _.cloneDeep(selectedCoffee);\n\n\tif (itemExist) {\n\t\t// item already in cart...\n\t\t// increase quantity property by one\n\t\titemExist.quantity += 1;\n\t\t// increase total\n\t\tlet newTotal = itemExist.price + cart.price;\n\n\t\tlet newVals = { itemExist, total: newTotal };\n\t} else {\n\t\t// add item to cart...\n\t\t// create new quantity property\n\t\tcoffeeToAdd.quantity = 1;\n\t\t// add to total\n\t\tlet newTotal = coffeeToAdd.price + cart.price;\n\n\t\tlet newVals = { itemExist, total: newTotal };\n\t}\n\n\tconst response = await coffees.post('/cart', { id, ...newVals });\n\n\tdispatch({\n\t\ttype: ADD_TO_CART,\n\t\t// payload: { id, cart, selectedCoffee, itemExist },\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}