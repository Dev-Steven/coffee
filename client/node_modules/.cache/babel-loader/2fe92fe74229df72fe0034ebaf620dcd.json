{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeEdit.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport CoffeeForm from './CoffeeForm';\nimport { editCoffee, getcoffee } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass CoffeeEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formVals => {\n      this.props.editCoffee(this.props.match.params.id, formVals);\n    };\n  }\n\n  componentDidMount() {\n    // need this because if user jumps straight to this route the appropriate stream will appear\n    // need information for the this.props.coffee value\n    this.props.getcoffee(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.props.coffee) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"loading\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, \"Coffee Edit Component\", /*#__PURE__*/React.createElement(CoffeeForm, {\n      onSubmit: this.onSubmit,\n      initialValues: _.pick(this.props.coffee, 'name', 'picture', 'price', 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    coffee: state.coffee[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editCoffee,\n  getcoffee\n})(CoffeeEdit);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeEdit.js"],"names":["React","Component","_","CoffeeForm","editCoffee","getcoffee","connect","CoffeeEdit","onSubmit","formVals","props","match","params","id","componentDidMount","render","console","log","coffee","pick","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAOlCO,QAPkC,GAOvBC,QAAQ,IAAI;AACtB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,QAAlD;AACA,KATiC;AAAA;;AAClCK,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA,SAAKJ,KAAL,CAAWL,SAAX,CAAqB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA;;AAMDE,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;;AACA,QAAI,KAAKA,KAAL,CAAWQ,MAAf,EAAuB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;;AACD,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEC,oBAAC,UAAD;AACC,MAAA,QAAQ,EAAE,KAAKV,QADhB;AAEC,MAAA,aAAa,EAAEN,CAAC,CAACiB,IAAF,CACd,KAAKT,KAAL,CAAWQ,MADG,EAEd,MAFc,EAGd,SAHc,EAId,OAJc,EAKd,aALc,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAeA;;AA/BiC;;AAkCnC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaI,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AAAV,GAAP;AACA,CAFD;;AAIA,eAAeP,OAAO,CAACc,eAAD,EAAkB;AAAEhB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport CoffeeForm from './CoffeeForm';\nimport { editCoffee, getcoffee } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass CoffeeEdit extends Component {\n\tcomponentDidMount() {\n\t\t// need this because if user jumps straight to this route the appropriate stream will appear\n\t\t// need information for the this.props.coffee value\n\t\tthis.props.getcoffee(this.props.match.params.id);\n\t}\n\n\tonSubmit = formVals => {\n\t\tthis.props.editCoffee(this.props.match.params.id, formVals);\n\t};\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\tif (this.props.coffee) {\n\t\t\treturn <div>loading</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tCoffee Edit Component\n\t\t\t\t<CoffeeForm\n\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\tinitialValues={_.pick(\n\t\t\t\t\t\tthis.props.coffee,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'picture',\n\t\t\t\t\t\t'price',\n\t\t\t\t\t\t'description'\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { coffee: state.coffee[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { editCoffee, getcoffee })(CoffeeEdit);\n"]},"metadata":{},"sourceType":"module"}