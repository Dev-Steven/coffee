{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/client/src/components/GoogleAuth/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions';\nimport { Button, Row, Space } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\nimport './GoogleAuth.scss';\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        var profile = this.auth.currentUser.get().getBasicProfile();\n        this.props.signIn(profile.getId(), profile.getName());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n        fetch_basic_profile: true,\n        scope: 'email'\n      }).then(() => {\n        // reference to get status of user, sign in/out\n        this.auth = window.gapi.auth2.getAuthInstance(); // get current auth status\n\n        this.onAuthChange(this.auth.isSignedIn.get()); // update the auth status whenever a change is made\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  } // listen method calls onAuthChange with a boolean argument\n  // so we dont need this.auth.isSignedIn.get()\n\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Loading\");\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"google-auth container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, \"Welcome, \", this.props.userName), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"col btn btn-primary\",\n        onClick: this.onSignOutClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, \"y\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"primary\",\n        shape: \"round\",\n        icon: /*#__PURE__*/React.createElement(GoogleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 12\n          }\n        }),\n        danger: true,\n        onClick: this.onSignInClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }\n      }, \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userName: state.auth.userName\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/components/GoogleAuth/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","Button","Row","Space","GoogleOutlined","GoogleAuth","onAuthChange","isSignedIn","profile","auth","currentUser","get","getBasicProfile","props","getId","getName","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","fetch_basic_profile","scope","then","auth2","getAuthInstance","listen","renderAuthButton","userName","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,eAAhC;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,KAAtB,QAAmC,MAAnC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,mBAAP;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAuBlCS,YAvBkC,GAuBnBC,UAAU,IAAI;AAC5B,UAAIA,UAAJ,EAAgB;AACf,YAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,eAA5B,EAAd;AACA,aAAKC,KAAL,CAAWd,MAAX,CAAkBS,OAAO,CAACM,KAAR,EAAlB,EAAmCN,OAAO,CAACO,OAAR,EAAnC;AACA,OAHD,MAGO;AACN,aAAKF,KAAL,CAAWb,OAAX;AACA;AACD,KA9BiC;;AAAA,SAgClCgB,aAhCkC,GAgClB,MAAM;AACrB,WAAKP,IAAL,CAAUV,MAAV;AACA,KAlCiC;;AAAA,SAoClCkB,cApCkC,GAoCjB,MAAM;AACtB,WAAKR,IAAL,CAAUT,OAAV;AACA,KAtCiC;AAAA;;AAClCkB,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACtCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACEC,IADF,CACO;AACLC,QAAAA,QAAQ,EACP,0EAFI;AAGLC,QAAAA,mBAAmB,EAAE,IAHhB;AAILC,QAAAA,KAAK,EAAE;AAJF,OADP,EAOEC,IAPF,CAOO,MAAM;AACX;AACA,aAAKlB,IAAL,GAAYU,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ,CAFW,CAGX;;AACA,aAAKvB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EAJW,CAKX;;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBuB,MAArB,CAA4B,KAAKxB,YAAjC;AACA,OAdF;AAeA,KAhBD;AAiBA,GAnBiC,CAqBlC;AACA;;;AAkBAyB,EAAAA,gBAAgB,GAAG;AAClB,QAAI,KAAKlB,KAAL,CAAWN,UAAX,KAA0B,IAA9B,EAAoC;AACnC,0BAAO;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA,KAFD,MAEO,IAAI,KAAKM,KAAL,CAAWN,UAAf,EAA2B;AACjC,0BACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B,KAAKM,KAAL,CAAWmB,QAAxC,CADD,eAEC;AACC,QAAA,SAAS,EAAC,qBADX;AAEC,QAAA,OAAO,EAAE,KAAKf,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,CADD,CADD;AAaA,KAdM,MAcA;AACN,0BACC;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHP;AAIC,QAAA,MAAM,MAJP;AAKC,QAAA,OAAO,EAAE,KAAKD,aALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD;AAWA;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKF,gBAAL,EAAN,CAAP;AACA;;AA1EiC;;AA6EnC,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACN5B,IAAAA,UAAU,EAAE4B,KAAK,CAAC1B,IAAN,CAAWF,UADjB;AAENyB,IAAAA,QAAQ,EAAEG,KAAK,CAAC1B,IAAN,CAAWuB;AAFf,GAAP;AAIA,CALD;;AAOA,eAAelC,OAAO,CAACoC,eAAD,EAAkB;AAAEnC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CK,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions';\n\nimport { Button, Row, Space } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\n\nimport './GoogleAuth.scss';\n\nclass GoogleAuth extends Component {\n\tcomponentDidMount() {\n\t\twindow.gapi.load('client:auth2', () => {\n\t\t\twindow.gapi.client\n\t\t\t\t.init({\n\t\t\t\t\tclientId:\n\t\t\t\t\t\t'165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n\t\t\t\t\tfetch_basic_profile: true,\n\t\t\t\t\tscope: 'email',\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\t// reference to get status of user, sign in/out\n\t\t\t\t\tthis.auth = window.gapi.auth2.getAuthInstance();\n\t\t\t\t\t// get current auth status\n\t\t\t\t\tthis.onAuthChange(this.auth.isSignedIn.get());\n\t\t\t\t\t// update the auth status whenever a change is made\n\t\t\t\t\tthis.auth.isSignedIn.listen(this.onAuthChange);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t// listen method calls onAuthChange with a boolean argument\n\t// so we dont need this.auth.isSignedIn.get()\n\tonAuthChange = isSignedIn => {\n\t\tif (isSignedIn) {\n\t\t\tvar profile = this.auth.currentUser.get().getBasicProfile();\n\t\t\tthis.props.signIn(profile.getId(), profile.getName());\n\t\t} else {\n\t\t\tthis.props.signOut();\n\t\t}\n\t};\n\n\tonSignInClick = () => {\n\t\tthis.auth.signIn();\n\t};\n\n\tonSignOutClick = () => {\n\t\tthis.auth.signOut();\n\t};\n\n\trenderAuthButton() {\n\t\tif (this.props.isSignedIn === null) {\n\t\t\treturn <button className='btn btn-primary'>Loading</button>;\n\t\t} else if (this.props.isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<div className='google-auth container'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<p className='col'>Welcome, {this.props.userName}</p>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='col btn btn-primary'\n\t\t\t\t\t\t\tonClick={this.onSignOutClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\ty\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tshape='round'\n\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\tdanger\n\t\t\t\t\tonClick={this.onSignInClick}\n\t\t\t\t>\n\t\t\t\t\tSign In with Google\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div>{this.renderAuthButton()}</div>;\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisSignedIn: state.auth.isSignedIn,\n\t\tuserName: state.auth.userName,\n\t};\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}