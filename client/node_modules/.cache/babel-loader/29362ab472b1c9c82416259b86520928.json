{"ast":null,"code":"import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\nexport const addToCart = id => async dispatch => {\n  const responseCart = await coffees.get('/cart');\n  const cart = responseCart.data;\n  console.log(cart);\n  let responseSelectedCoffee = await coffees.get(`/coffees?id=${id}`);\n  let selectedCoffee = responseSelectedCoffee.data[0]; // console.log(selectedCoffee);\n  // need to figure out a way to filter for correct item, should return null if nothing...\n  // possibly figure out how to add into cart with [id]: object data first\n  // then we can filter? -> should still return null though...\n\n  let responseItemExist = await coffees.get(`/cart?total`);\n  let itemExist = responseItemExist.data[0];\n  console.log(responseItemExist);\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      id,\n      cart\n    } // payload: { id, cart, selectedCoffee, itemExist },\n\n  });\n};","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/actions/cartActions.js"],"names":["ADD_TO_CART","coffees","addToCart","id","dispatch","responseCart","get","cart","data","console","log","responseSelectedCoffee","selectedCoffee","responseItemExist","itemExist","type","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AAChD,QAAMC,YAAY,GAAG,MAAMJ,OAAO,CAACK,GAAR,CAAY,OAAZ,CAA3B;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACG,IAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,MAAII,sBAAsB,GAAG,MAAMV,OAAO,CAACK,GAAR,CAAa,eAAcH,EAAG,EAA9B,CAAnC;AACA,MAAIS,cAAc,GAAGD,sBAAsB,CAACH,IAAvB,CAA4B,CAA5B,CAArB,CANgD,CAOhD;AAEA;AACA;AACA;;AACA,MAAIK,iBAAiB,GAAG,MAAMZ,OAAO,CAACK,GAAR,CAAa,aAAb,CAA9B;AACA,MAAIQ,SAAS,GAAGD,iBAAiB,CAACL,IAAlB,CAAuB,CAAvB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYG,iBAAZ;AAEAT,EAAAA,QAAQ,CAAC;AACRW,IAAAA,IAAI,EAAEf,WADE;AAERgB,IAAAA,OAAO,EAAE;AAAEb,MAAAA,EAAF;AAAMI,MAAAA;AAAN,KAFD,CAGR;;AAHQ,GAAD,CAAR;AAKA,CArBM","sourcesContent":["import { ADD_TO_CART } from './types';\nimport coffees from '../apis/coffees';\n\nexport const addToCart = id => async dispatch => {\n\tconst responseCart = await coffees.get('/cart');\n\tconst cart = responseCart.data;\n\tconsole.log(cart);\n\n\tlet responseSelectedCoffee = await coffees.get(`/coffees?id=${id}`);\n\tlet selectedCoffee = responseSelectedCoffee.data[0];\n\t// console.log(selectedCoffee);\n\n\t// need to figure out a way to filter for correct item, should return null if nothing...\n\t// possibly figure out how to add into cart with [id]: object data first\n\t// then we can filter? -> should still return null though...\n\tlet responseItemExist = await coffees.get(`/cart?total`);\n\tlet itemExist = responseItemExist.data[0];\n\tconsole.log(responseItemExist);\n\n\tdispatch({\n\t\ttype: ADD_TO_CART,\n\t\tpayload: { id, cart },\n\t\t// payload: { id, cart, selectedCoffee, itemExist },\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}