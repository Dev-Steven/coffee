{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { Button } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        var profile = this.auth.currentUser.get().getBasicProfile();\n        console.log('Id: ' + profile.getId());\n        console.log('Full Name: ' + profile.getName());\n        this.props.signIn(profile.getId(), profile.getName());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n        fetch_basic_profile: true,\n        scope: 'email'\n      }).then(() => {\n        // reference to get status of user, sign in/out\n        this.auth = window.gapi.auth2.getAuthInstance(); // get current auth status\n\n        this.onAuthChange(this.auth.isSignedIn.get()); // update the auth status whenever a change is made\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  } // listen method calls onAuthChange with a boolean argument\n  // so we dont need this.auth.isSignedIn.get()\n\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        loading: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, \"Loading\");\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        onClick: this.onSignOutClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }\n      }, \"Sign Out\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        icon: /*#__PURE__*/React.createElement(GoogleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }\n        }),\n        danger: true,\n        onClick: this.onSignInClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userName: state.auth.userName\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","signIn","signOut","Button","GoogleOutlined","GoogleAuth","onAuthChange","isSignedIn","profile","auth","currentUser","get","getBasicProfile","console","log","getId","getName","props","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","fetch_basic_profile","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state","userName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;AAEA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAuBlCO,YAvBkC,GAuBnBC,UAAU,IAAI;AAC5B,UAAIA,UAAJ,EAAgB;AACf,YAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,eAA5B,EAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAASN,OAAO,CAACO,KAAR,EAArB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBN,OAAO,CAACQ,OAAR,EAA5B;AACA,aAAKC,KAAL,CAAWhB,MAAX,CAAkBO,OAAO,CAACO,KAAR,EAAlB,EAAmCP,OAAO,CAACQ,OAAR,EAAnC;AACA,OALD,MAKO;AACN,aAAKC,KAAL,CAAWf,OAAX;AACA;AACD,KAhCiC;;AAAA,SAkClCgB,aAlCkC,GAkClB,MAAM;AACrB,WAAKT,IAAL,CAAUR,MAAV;AACA,KApCiC;;AAAA,SAsClCkB,cAtCkC,GAsCjB,MAAM;AACtB,WAAKV,IAAL,CAAUP,OAAV;AACA,KAxCiC;AAAA;;AAClCkB,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACtCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACEC,IADF,CACO;AACLC,QAAAA,QAAQ,EACP,0EAFI;AAGLC,QAAAA,mBAAmB,EAAE,IAHhB;AAILC,QAAAA,KAAK,EAAE;AAJF,OADP,EAOEC,IAPF,CAOO,MAAM;AACX;AACA,aAAKpB,IAAL,GAAYY,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ,CAFW,CAGX;;AACA,aAAKzB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EAJW,CAKX;;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqByB,MAArB,CAA4B,KAAK1B,YAAjC;AACA,OAdF;AAeA,KAhBD;AAiBA,GAnBiC,CAqBlC;AACA;;;AAoBA2B,EAAAA,gBAAgB,GAAG;AAClB,QAAI,KAAKhB,KAAL,CAAWV,UAAX,KAA0B,IAA9B,EAAoC;AACnC,0BACC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAqC,QAAA,OAAO,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD;AAKA,KAND,MAMO,IAAI,KAAKU,KAAL,CAAWV,UAAf,EAA2B;AACjC,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,OAAO,EAAE,KAAKY,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADD;AAYA,KAbM,MAaA;AACN,0BACC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHP;AAIC,QAAA,MAAM,MAJP;AAKC,QAAA,OAAO,EAAE,KAAKD,aALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD;AAWA;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACA;;AA/EiC;;AAkFnC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACN7B,IAAAA,UAAU,EAAE6B,KAAK,CAAC3B,IAAN,CAAWF,UADjB;AAEN8B,IAAAA,QAAQ,EAAED,KAAK,CAAC3B,IAAN,CAAW4B;AAFf,GAAP;AAIA,CALD;;AAOA,eAAerC,OAAO,CAACmC,eAAD,EAAkB;AAAElC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CG,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nimport { Button } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\n\nclass GoogleAuth extends Component {\n\tcomponentDidMount() {\n\t\twindow.gapi.load('client:auth2', () => {\n\t\t\twindow.gapi.client\n\t\t\t\t.init({\n\t\t\t\t\tclientId:\n\t\t\t\t\t\t'165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n\t\t\t\t\tfetch_basic_profile: true,\n\t\t\t\t\tscope: 'email',\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\t// reference to get status of user, sign in/out\n\t\t\t\t\tthis.auth = window.gapi.auth2.getAuthInstance();\n\t\t\t\t\t// get current auth status\n\t\t\t\t\tthis.onAuthChange(this.auth.isSignedIn.get());\n\t\t\t\t\t// update the auth status whenever a change is made\n\t\t\t\t\tthis.auth.isSignedIn.listen(this.onAuthChange);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t// listen method calls onAuthChange with a boolean argument\n\t// so we dont need this.auth.isSignedIn.get()\n\tonAuthChange = isSignedIn => {\n\t\tif (isSignedIn) {\n\t\t\tvar profile = this.auth.currentUser.get().getBasicProfile();\n\t\t\tconsole.log('Id: ' + profile.getId());\n\t\t\tconsole.log('Full Name: ' + profile.getName());\n\t\t\tthis.props.signIn(profile.getId(), profile.getName());\n\t\t} else {\n\t\t\tthis.props.signOut();\n\t\t}\n\t};\n\n\tonSignInClick = () => {\n\t\tthis.auth.signIn();\n\t};\n\n\tonSignOutClick = () => {\n\t\tthis.auth.signOut();\n\t};\n\n\trenderAuthButton() {\n\t\tif (this.props.isSignedIn === null) {\n\t\t\treturn (\n\t\t\t\t<Button type='primary' shape='round' loading>\n\t\t\t\t\tLoading\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else if (this.props.isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{/* <h2>Welcome, {this.props.userName}</h2> */}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\tshape='round'\n\t\t\t\t\t\tonClick={this.onSignOutClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Out\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tshape='round'\n\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\tdanger\n\t\t\t\t\tonClick={this.onSignInClick}\n\t\t\t\t>\n\t\t\t\t\tSign In with Google\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div>{this.renderAuthButton()}</div>;\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisSignedIn: state.auth.isSignedIn,\n\t\tuserName: state.auth.userName,\n\t};\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}