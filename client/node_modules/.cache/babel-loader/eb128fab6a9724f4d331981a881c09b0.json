{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeForm.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport history from '../../history';\nimport { Form, Button, Typography } from 'antd';\nconst {\n  Text\n} = Typography;\n\nclass CoffeeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type,\n      meta\n    }) => {\n      // copying all properties into out input tag\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, label, \": \"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      })), this.renderErrors(meta));\n    };\n\n    this.onSubmit = formVals => {\n      console.log({\n        formVals\n      });\n      this.props.onSubmit(formVals);\n    };\n\n    this.onCancel = () => {\n      history.push('/coffees');\n    };\n  }\n\n  renderErrors({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }\n      }, error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"name\",\n      component: this.renderTextInput,\n      type: \"text\",\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"picture\",\n      component: this.renderTextInput,\n      type: \"text\",\n      label: \"Picture url\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"price\",\n      component: this.renderTextInput,\n      type: \"number\",\n      label: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderTextInput,\n      type: \"text\",\n      label: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"Cancel\"));\n  }\n\n}\n\nconst validate = formVals => {\n  const errors = {};\n\n  if (!formVals.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  if (!formVals.price) {\n    errors.price = 'You must enter a price';\n  }\n\n  if (!formVals.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'coffeeCreate',\n  validate\n})(CoffeeForm);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeForm.js"],"names":["React","Component","Field","reduxForm","history","Form","Button","Typography","Text","CoffeeForm","renderTextInput","input","label","type","meta","renderErrors","onSubmit","formVals","console","log","props","onCancel","push","error","touched","render","handleSubmit","validate","errors","name","price","description","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport history from '../../history';\n\nimport { Form, Button, Typography } from 'antd';\nconst { Text } = Typography;\n\nclass CoffeeForm extends Component {\n\trenderErrors({ error, touched }) {\n\t\tif (touched && error) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Text type='danger'>{error}</Text>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trenderTextInput = ({ input, label, type, meta }) => {\n\t\t// copying all properties into out input tag\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* add antd Form somewhere here */}\n\t\t\t\t<label>{label}: </label>\n\t\t\t\t<input {...input} type={type} />\n\t\t\t\t{this.renderErrors(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tonSubmit = formVals => {\n\t\tconsole.log({ formVals });\n\t\tthis.props.onSubmit(formVals);\n\t};\n\n\tonCancel = () => {\n\t\thistory.push('/coffees');\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\t\t\t\t<Field\n\t\t\t\t\tname='name'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Name'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname='picture'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Picture url'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname='price'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tlabel='Price'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname='description'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Description'\n\t\t\t\t/>\n\t\t\t\t<Button>Submit</Button>\n\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nconst validate = formVals => {\n\tconst errors = {};\n\n\tif (!formVals.name) {\n\t\terrors.name = 'You must enter a name';\n\t}\n\tif (!formVals.price) {\n\t\terrors.price = 'You must enter a price';\n\t}\n\tif (!formVals.description) {\n\t\terrors.description = 'You must enter a description';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({ form: 'coffeeCreate', validate })(CoffeeForm);\n"]},"metadata":{},"sourceType":"module"}