{"ast":null,"code":"import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\nimport _ from 'lodash';\nexport default (async (state = {}, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return console.log('cartReducer');\n    // PURPOSE: make changes to the cart\n    // // if item in cart, update quantity and total price\n    // // action.payload.itemExist &&\n    // if (action.payload.itemExist.id === action.payload.id) {\n    // \tconsole.log('item in cart');\n    // \tcoffeeToAdd.quantity += 1;\n    // \tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n    // \treturn {\n    // \t\t...state,\n    // \t\ttotal: newTotal,\n    // \t};\n    // } else {\n    // \tcoffeeToAdd.quantity = 1;\n    // \tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n    // \tconst response = await coffees.post('/cart', {\n    // \t\t...state,\n    // \t\t[action.payload.id]: { coffeeToAdd, total: newTotal },\n    //     });\n    //     console.log(response.data)\n    // \t// cant figure out how to update cart\n    // \treturn {\n    // \t\t...state,\n    // \t\ttotal: newTotal,\n    // \t\t[action.payload.id]: coffeeToAdd,\n    // \t};\n    // }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/reducers/cartReducer.js"],"names":["coffees","ADD_TO_CART","_","state","action","type","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,OAAOC,KAAK,GAAG,EAAf,EAAmBC,MAAnB,KAA8B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKJ,WAAL;AACC,aAAOK,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAP;AAED;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACC,aAAOJ,KAAP;AArCF;AAuCA,CAxCD","sourcesContent":["import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\nimport _ from 'lodash';\n\nexport default async (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_CART:\n\t\t\treturn console.log('cartReducer');\n\n\t\t// PURPOSE: make changes to the cart\n\n\t\t// // if item in cart, update quantity and total price\n\t\t// // action.payload.itemExist &&\n\t\t// if (action.payload.itemExist.id === action.payload.id) {\n\t\t// \tconsole.log('item in cart');\n\n\t\t// \tcoffeeToAdd.quantity += 1;\n\t\t// \tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\ttotal: newTotal,\n\t\t// \t};\n\t\t// } else {\n\t\t// \tcoffeeToAdd.quantity = 1;\n\t\t// \tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n\n\t\t// \tconst response = await coffees.post('/cart', {\n\t\t// \t\t...state,\n\t\t// \t\t[action.payload.id]: { coffeeToAdd, total: newTotal },\n\t\t//     });\n\n\t\t//     console.log(response.data)\n\n\t\t// \t// cant figure out how to update cart\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\ttotal: newTotal,\n\t\t// \t\t[action.payload.id]: coffeeToAdd,\n\t\t// \t};\n\t\t// }\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}