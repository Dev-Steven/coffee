{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/src/components/coffee/CoffeeCreate.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form'; // import CoffeeForm from './CoffeeForm';\n\nimport { Form, Input, Button } from 'antd';\n\nclass CreateCoffee extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTextInput = ({\n      input,\n      label,\n      type,\n      meta\n    }) => {\n      // copying all properties into out input tag\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 5\n        }\n      }, label, \": \"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      })), this.renderErrors(meta));\n    };\n  }\n\n  renderErrors({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 6\n        }\n      }, error));\n    }\n  }\n\n  onSubmit(formVals) {\n    console.log(formVals);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"name\",\n      component: this.renderTextInput,\n      type: \"text\",\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"price\",\n      component: this.renderTextInput,\n      type: \"number\",\n      label: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderTextInput,\n      type: \"text\",\n      label: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formVals => {\n  const errors = {};\n\n  if (!formVals.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  if (!formVals.price) {\n    errors.price = 'You must enter a price';\n  }\n\n  if (!formVals.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'coffeeCreate',\n  validate\n})(CreateCoffee);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/src/components/coffee/CoffeeCreate.js"],"names":["React","Component","Field","reduxForm","Form","Input","Button","CreateCoffee","renderTextInput","input","label","type","meta","renderErrors","error","touched","onSubmit","formVals","console","log","render","props","handleSubmit","validate","errors","name","price","description","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC,C,CAEA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAWpCO,eAXoC,GAWlB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB,KAAD,KAAkC;AACnD;AACA,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,OAFD,eAGC,+CAAWD,KAAX;AAAkB,QAAA,IAAI,EAAEE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHD,EAIE,KAAKE,YAAL,CAAkBD,IAAlB,CAJF,CADD;AAQA,KArBmC;AAAA;;AACpCC,EAAAA,YAAY,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAqB;AAChC,QAAIA,OAAO,IAAID,KAAf,EAAsB;AACrB,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,CADD,CADD;AAKA;AACD;;AAcDE,EAAAA,QAAQ,CAACC,QAAD,EAAW;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,wBACC;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,SAAS,EAAE,KAAKR,eAFjB;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,KAAK,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAOC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,SAAS,EAAE,KAAKA,eAFjB;AAGC,MAAA,IAAI,EAAC,QAHN;AAIC,MAAA,KAAK,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,eAaC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,aADN;AAEC,MAAA,SAAS,EAAE,KAAKA,eAFjB;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,KAAK,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,eAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBD,CADD;AAuBA;;AAnDmC;;AAsDrC,MAAMe,QAAQ,GAAGN,QAAQ,IAAI;AAC5B,QAAMO,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACP,QAAQ,CAACQ,IAAd,EAAoB;AACnBD,IAAAA,MAAM,CAACC,IAAP,GAAc,uBAAd;AACA;;AACD,MAAI,CAACR,QAAQ,CAACS,KAAd,EAAqB;AACpBF,IAAAA,MAAM,CAACE,KAAP,GAAe,wBAAf;AACA;;AACD,MAAI,CAACT,QAAQ,CAACU,WAAd,EAA2B;AAC1BH,IAAAA,MAAM,CAACG,WAAP,GAAqB,8BAArB;AACA;;AAED,SAAOH,MAAP;AACA,CAdD;;AAgBA,eAAerB,SAAS,CAAC;AAAEyB,EAAAA,IAAI,EAAE,cAAR;AAAwBL,EAAAA;AAAxB,CAAD,CAAT,CAA8ChB,YAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\n// import CoffeeForm from './CoffeeForm';\nimport { Form, Input, Button } from 'antd';\n\nclass CreateCoffee extends Component {\n\trenderErrors({ error, touched }) {\n\t\tif (touched && error) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>{error}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trenderTextInput = ({ input, label, type, meta }) => {\n\t\t// copying all properties into out input tag\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* add antd Form somewhere here */}\n\t\t\t\t<label>{label}: </label>\n\t\t\t\t<input {...input} type={type} />\n\t\t\t\t{this.renderErrors(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tonSubmit(formVals) {\n\t\tconsole.log(formVals);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\t\t\t\t<Field\n\t\t\t\t\tname='name'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Name'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname='price'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tlabel='Price'\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tname='description'\n\t\t\t\t\tcomponent={this.renderTextInput}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Description'\n\t\t\t\t/>\n\t\t\t\t<button>Submit</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst validate = formVals => {\n\tconst errors = {};\n\n\tif (!formVals.name) {\n\t\terrors.name = 'You must enter a name';\n\t}\n\tif (!formVals.price) {\n\t\terrors.price = 'You must enter a price';\n\t}\n\tif (!formVals.description) {\n\t\terrors.description = 'You must enter a description';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({ form: 'coffeeCreate', validate })(CreateCoffee);\n"]},"metadata":{},"sourceType":"module"}