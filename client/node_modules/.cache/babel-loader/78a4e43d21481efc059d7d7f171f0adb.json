{"ast":null,"code":"import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\nimport _ from 'lodash';\nexport default (async (state = {}, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      let coffeeToAdd = _.cloneDeep(action.payload.selectedCoffee); // if item in cart, update quantity and total price\n      // action.payload.itemExist &&\n\n\n      if (action.payload.itemExist.id === action.payload.id) {\n        console.log('item in cart');\n        coffeeToAdd.quantity += 1;\n        let newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n        return { ...state,\n          total: newTotal\n        };\n      } else {\n        coffeeToAdd.quantity = 1;\n        let newTotal = coffeeToAdd.price + action.payload.cart[0].total; // cant figure out how to update cart\n\n        return { ...state,\n          total: newTotal,\n          [action.payload.id]: {\n            coffeeToAdd\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/reducers/cartReducer.js"],"names":["coffees","ADD_TO_CART","_","state","action","type","coffeeToAdd","cloneDeep","payload","selectedCoffee","itemExist","id","console","log","quantity","newTotal","price","cart","total"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,OAAOC,KAAK,GAAG,EAAf,EAAmBC,MAAnB,KAA8B;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKJ,WAAL;AACC,UAAIK,WAAW,GAAGJ,CAAC,CAACK,SAAF,CAAYH,MAAM,CAACI,OAAP,CAAeC,cAA3B,CAAlB,CADD,CAGC;AACA;;;AACA,UAAIL,MAAM,CAACI,OAAP,CAAeE,SAAf,CAAyBC,EAAzB,KAAgCP,MAAM,CAACI,OAAP,CAAeG,EAAnD,EAAuD;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAP,QAAAA,WAAW,CAACQ,QAAZ,IAAwB,CAAxB;AACA,YAAIC,QAAQ,GAAGT,WAAW,CAACU,KAAZ,GAAoBZ,MAAM,CAACI,OAAP,CAAeS,IAAf,CAAoB,CAApB,EAAuBC,KAA1D;AAEA,eAAO,EACN,GAAGf,KADG;AAENe,UAAAA,KAAK,EAAEH;AAFD,SAAP;AAIA,OAVD,MAUO;AACNT,QAAAA,WAAW,CAACQ,QAAZ,GAAuB,CAAvB;AACA,YAAIC,QAAQ,GAAGT,WAAW,CAACU,KAAZ,GAAoBZ,MAAM,CAACI,OAAP,CAAeS,IAAf,CAAoB,CAApB,EAAuBC,KAA1D,CAFM,CAIN;;AACA,eAAO,EACN,GAAGf,KADG;AAENe,UAAAA,KAAK,EAAEH,QAFD;AAGN,WAACX,MAAM,CAACI,OAAP,CAAeG,EAAhB,GAAqB;AAAEL,YAAAA;AAAF;AAHf,SAAP;AAKA;;AACF;AACC,aAAOH,KAAP;AA5BF;AA8BA,CA/BD","sourcesContent":["import coffees from '../apis/coffees';\nimport { ADD_TO_CART } from '../actions/types';\nimport _ from 'lodash';\n\nexport default async (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_CART:\n\t\t\tlet coffeeToAdd = _.cloneDeep(action.payload.selectedCoffee);\n\n\t\t\t// if item in cart, update quantity and total price\n\t\t\t// action.payload.itemExist &&\n\t\t\tif (action.payload.itemExist.id === action.payload.id) {\n\t\t\t\tconsole.log('item in cart');\n\n\t\t\t\tcoffeeToAdd.quantity += 1;\n\t\t\t\tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttotal: newTotal,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcoffeeToAdd.quantity = 1;\n\t\t\t\tlet newTotal = coffeeToAdd.price + action.payload.cart[0].total;\n\n\t\t\t\t// cant figure out how to update cart\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttotal: newTotal,\n\t\t\t\t\t[action.payload.id]: { coffeeToAdd },\n\t\t\t\t};\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}