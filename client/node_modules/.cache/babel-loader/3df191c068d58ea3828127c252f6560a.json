{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeEdit.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport CoffeeForm from './CoffeeForm';\nimport { editCoffee, getCoffee } from '../../actions';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nclass CoffeeEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formVals => {\n      this.props.editCoffee(this.props.match.params.id, formVals);\n    };\n  }\n\n  componentDidMount() {\n    // need this because if user jumps straight to this route the appropriate stream will appear\n    // need information for the this.props.coffee value\n    this.props.getCoffee(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.coffee) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, \"Coffee Edit Component\", /*#__PURE__*/React.createElement(CoffeeForm, {\n      handleSubmit: this.onSubmit // pick allows us to create a new object with our own chosen properties\n      // _.pick(object, [properties we want])\n      ,\n      initialValues: _.pick(this.props.coffee, 'name', 'picture', 'price', 'description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // ownProps - allows us to access props within the component\n  return {\n    coffee: state.coffee[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editCoffee,\n  getCoffee\n})(CoffeeEdit);","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/components/coffee/CoffeeEdit.js"],"names":["React","Component","_","CoffeeForm","editCoffee","getCoffee","connect","LoadingOutlined","CoffeeEdit","onSubmit","formVals","props","match","params","id","componentDidMount","render","coffee","pick","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,eAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAOlCQ,QAPkC,GAOvBC,QAAQ,IAAI;AACtB,WAAKC,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,QAAlD;AACA,KATiC;AAAA;;AAClCK,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA,SAAKJ,KAAL,CAAWN,SAAX,CAAqB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA;;AAMDE,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACvB,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;AACD,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEC,oBAAC,UAAD;AACC,MAAA,YAAY,EAAE,KAAKR,QADpB,CAEC;AACA;AAHD;AAIC,MAAA,aAAa,EAAEP,CAAC,CAACgB,IAAF,CACd,KAAKP,KAAL,CAAWM,MADG,EAEd,MAFc,EAGd,SAHc,EAId,OAJc,EAKd,aALc,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAiBA;;AApCiC;;AAuCnC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C;AACA,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaI,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAAnC;AAAV,GAAP;AACA,CAHD;;AAKA,eAAeR,OAAO,CAACa,eAAD,EAAkB;AAAEf,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDG,UAApD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport CoffeeForm from './CoffeeForm';\nimport { editCoffee, getCoffee } from '../../actions';\nimport { connect } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nclass CoffeeEdit extends Component {\n\tcomponentDidMount() {\n\t\t// need this because if user jumps straight to this route the appropriate stream will appear\n\t\t// need information for the this.props.coffee value\n\t\tthis.props.getCoffee(this.props.match.params.id);\n\t}\n\n\tonSubmit = formVals => {\n\t\tthis.props.editCoffee(this.props.match.params.id, formVals);\n\t};\n\n\trender() {\n\t\tif (!this.props.coffee) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<LoadingOutlined />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tCoffee Edit Component\n\t\t\t\t<CoffeeForm\n\t\t\t\t\thandleSubmit={this.onSubmit}\n\t\t\t\t\t// pick allows us to create a new object with our own chosen properties\n\t\t\t\t\t// _.pick(object, [properties we want])\n\t\t\t\t\tinitialValues={_.pick(\n\t\t\t\t\t\tthis.props.coffee,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'picture',\n\t\t\t\t\t\t'price',\n\t\t\t\t\t\t'description'\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\t// ownProps - allows us to access props within the component\n\treturn { coffee: state.coffee[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { editCoffee, getCoffee })(CoffeeEdit);\n"]},"metadata":{},"sourceType":"module"}