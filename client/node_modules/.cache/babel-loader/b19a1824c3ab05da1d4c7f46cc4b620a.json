{"ast":null,"code":"import coffees from '../apis/coffees';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_COFFEE, GET_COFFEES, GET_COFFEE, EDIT_COFFEE, DELETE_COFFEE, ADD_TO_CART } from './types';\nexport const signIn = (userId, userName) => {\n  return {\n    type: SIGN_IN,\n    payload: {\n      userId,\n      userName\n    }\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createCoffee = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await coffees.post('/coffees', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_COFFEE,\n    payload: response.data\n  });\n  history.push('/coffees');\n};\nexport const getCoffees = () => async dispatch => {\n  const response = await coffees.get('/coffees');\n  dispatch({\n    type: GET_COFFEES,\n    payload: response.data\n  });\n};\nexport const getCoffee = id => async dispatch => {\n  const response = await coffees.get(`/coffees/${id}`);\n  dispatch({\n    type: GET_COFFEE,\n    payload: response.data\n  });\n};\nexport const editCoffee = (id, formValues) => async dispatch => {\n  // .put will overrides the entire original data .patch partial update\n  const response = await coffees.patch(`/coffees/${id}`, formValues);\n  dispatch({\n    type: EDIT_COFFEE,\n    payload: response.data\n  });\n  history.push('/coffees');\n};\nexport const deleteCoffee = id => async dispatch => {\n  await coffees.delete(`/coffees/${id}`);\n  dispatch({\n    type: DELETE_COFFEE,\n    payload: id\n  });\n  history.push('/coffees');\n};\nexport const addToCart = id => {\n  return {\n    type: ADD_TO_CART,\n    payload: id\n  };\n};","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/client/src/actions/index.js"],"names":["coffees","history","SIGN_IN","SIGN_OUT","CREATE_COFFEE","GET_COFFEES","GET_COFFEE","EDIT_COFFEE","DELETE_COFFEE","ADD_TO_CART","signIn","userId","userName","type","payload","signOut","createCoffee","formValues","dispatch","getState","auth","response","post","data","push","getCoffees","get","getCoffee","id","editCoffee","patch","deleteCoffee","delete","addToCart"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACCC,OADD,EAECC,QAFD,EAGCC,aAHD,EAICC,WAJD,EAKCC,UALD,EAMCC,WAND,EAOCC,aAPD,EAQCC,WARD,QASO,SATP;AAWA,OAAO,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC3C,SAAO;AACNC,IAAAA,IAAI,EAAEX,OADA;AAENY,IAAAA,OAAO,EAAE;AAAEH,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC5B,SAAO;AACNF,IAAAA,IAAI,EAAEV;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,QAAM;AAAER,IAAAA;AAAF,MAAaQ,QAAQ,GAAGC,IAA9B;AAEA,QAAMC,QAAQ,GAAG,MAAMrB,OAAO,CAACsB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBN,IAAAA;AAAjB,GAAzB,CAAvB;AAEAO,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACAtB,EAAAA,OAAO,CAACuB,IAAR,CAAa,UAAb;AACA,CAPM;AASP,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMP,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMrB,OAAO,CAAC0B,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAER,WAAR;AAAqBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMI,SAAS,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMrB,OAAO,CAAC0B,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,UAAR;AAAoBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC/D;AACA,QAAMG,QAAQ,GAAG,MAAMrB,OAAO,CAAC8B,KAAR,CAAe,YAAWF,EAAG,EAA7B,EAAgCX,UAAhC,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,WAAR;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACAtB,EAAAA,OAAO,CAACuB,IAAR,CAAa,UAAb;AACA,CANM;AAQP,OAAO,MAAMO,YAAY,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AACnD,QAAMlB,OAAO,CAACgC,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACA3B,EAAAA,OAAO,CAACuB,IAAR,CAAa,UAAb;AACA,CALM;AAOP,OAAO,MAAMS,SAAS,GAAGL,EAAE,IAAI;AAC9B,SAAO;AACNf,IAAAA,IAAI,EAAEJ,WADA;AAENK,IAAAA,OAAO,EAAEc;AAFH,GAAP;AAIA,CALM","sourcesContent":["import coffees from '../apis/coffees';\nimport history from '../history';\nimport {\n\tSIGN_IN,\n\tSIGN_OUT,\n\tCREATE_COFFEE,\n\tGET_COFFEES,\n\tGET_COFFEE,\n\tEDIT_COFFEE,\n\tDELETE_COFFEE,\n\tADD_TO_CART,\n} from './types';\n\nexport const signIn = (userId, userName) => {\n\treturn {\n\t\ttype: SIGN_IN,\n\t\tpayload: { userId, userName },\n\t};\n};\n\nexport const signOut = () => {\n\treturn {\n\t\ttype: SIGN_OUT,\n\t};\n};\n\nexport const createCoffee = formValues => async (dispatch, getState) => {\n\tconst { userId } = getState().auth;\n\n\tconst response = await coffees.post('/coffees', { ...formValues, userId });\n\n\tdispatch({ type: CREATE_COFFEE, payload: response.data });\n\thistory.push('/coffees');\n};\n\nexport const getCoffees = () => async dispatch => {\n\tconst response = await coffees.get('/coffees');\n\n\tdispatch({ type: GET_COFFEES, payload: response.data });\n};\n\nexport const getCoffee = id => async dispatch => {\n\tconst response = await coffees.get(`/coffees/${id}`);\n\n\tdispatch({ type: GET_COFFEE, payload: response.data });\n};\n\nexport const editCoffee = (id, formValues) => async dispatch => {\n\t// .put will overrides the entire original data .patch partial update\n\tconst response = await coffees.patch(`/coffees/${id}`, formValues);\n\n\tdispatch({ type: EDIT_COFFEE, payload: response.data });\n\thistory.push('/coffees');\n};\n\nexport const deleteCoffee = id => async dispatch => {\n\tawait coffees.delete(`/coffees/${id}`);\n\n\tdispatch({ type: DELETE_COFFEE, payload: id });\n\thistory.push('/coffees');\n};\n\nexport const addToCart = id => {\n\treturn {\n\t\ttype: ADD_TO_CART,\n\t\tpayload: id,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}