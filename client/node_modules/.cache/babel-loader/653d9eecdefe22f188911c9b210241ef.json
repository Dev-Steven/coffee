{"ast":null,"code":"var _jsxFileName = \"/Users/stevenchung/Documents/react/coffee/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\n\nclass GoogleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        // reference to get status of user, sign in/out\n        this.auth = window.gapi.auth2.getAuthInstance(); // get current auth status\n\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); // update the auth status whenever a change is made\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        icon: /*#__PURE__*/React.createElement(GoogleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }\n        }),\n        danger: true,\n        onClick: this.onSignOutClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }\n      }, \"Sign Out\");\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        icon: /*#__PURE__*/React.createElement(GoogleOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 12\n          }\n        }),\n        danger: true,\n        onClick: this.onSignInClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }\n      }, \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/stevenchung/Documents/react/coffee/src/components/GoogleAuth.js"],"names":["React","Component","Button","GoogleOutlined","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignInClick","signIn","onSignOutClick","signOut","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAElCI,KAFkC,GAE1B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAF0B;;AAAA,SAuBlCC,YAvBkC,GAuBnB,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACA,KAzBiC;;AAAA,SA2BlCC,aA3BkC,GA2BlB,MAAM;AACrB,WAAKF,IAAL,CAAUG,MAAV;AACA,KA7BiC;;AAAA,SA+BlCC,cA/BkC,GA+BjB,MAAM;AACtB,WAAKJ,IAAL,CAAUK,OAAV;AACA,KAjCiC;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACtCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACEC,IADF,CACO;AACLC,QAAAA,QAAQ,EACP,0EAFI;AAGLC,QAAAA,KAAK,EAAE;AAHF,OADP,EAMEC,IANF,CAMO,MAAM;AACX;AACA,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CAFW,CAGX;;AACA,aAAKjB,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd,EAJW,CAKX;;AACA,aAAKD,IAAL,CAAUH,UAAV,CAAqBoB,MAArB,CAA4B,KAAKnB,YAAjC;AACA,OAbF;AAcA,KAfD;AAgBA;;AAcDoB,EAAAA,gBAAgB,GAAG;AAClB,QAAI,KAAKtB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AACnC,aAAO,IAAP;AACA,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AACjC,0BACC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHP;AAIC,QAAA,MAAM,MAJP;AAKC,QAAA,OAAO,EAAE,KAAKO,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AAWA,KAZM,MAYA;AACN,0BACC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAC,OAFP;AAGC,QAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHP;AAIC,QAAA,MAAM,MAJP;AAKC,QAAA,OAAO,EAAE,KAAKF,aALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD;AAWA;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACA;;AAnEiC;;AAsEnC,eAAevB,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { Button } from 'antd';\nimport { GoogleOutlined } from '@ant-design/icons';\n\nclass GoogleAuth extends Component {\n\t// when app first loads we dont know if signed in or not\n\tstate = { isSignedIn: null };\n\n\tcomponentDidMount() {\n\t\twindow.gapi.load('client:auth2', () => {\n\t\t\twindow.gapi.client\n\t\t\t\t.init({\n\t\t\t\t\tclientId:\n\t\t\t\t\t\t'165355918127-02lo7eis00oftbrtvmbnasoccc87gbfs.apps.googleusercontent.com',\n\t\t\t\t\tscope: 'email',\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\t// reference to get status of user, sign in/out\n\t\t\t\t\tthis.auth = window.gapi.auth2.getAuthInstance();\n\t\t\t\t\t// get current auth status\n\t\t\t\t\tthis.setState({ isSignedIn: this.auth.isSignedIn.get() });\n\t\t\t\t\t// update the auth status whenever a change is made\n\t\t\t\t\tthis.auth.isSignedIn.listen(this.onAuthChange);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tonAuthChange = () => {\n\t\tthis.setState({ isSignedIn: this.auth.isSignedIn.get() });\n\t};\n\n\tonSignInClick = () => {\n\t\tthis.auth.signIn();\n\t};\n\n\tonSignOutClick = () => {\n\t\tthis.auth.signOut();\n\t};\n\n\trenderAuthButton() {\n\t\tif (this.state.isSignedIn === null) {\n\t\t\treturn null;\n\t\t} else if (this.state.isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tshape='round'\n\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\tdanger\n\t\t\t\t\tonClick={this.onSignOutClick}\n\t\t\t\t>\n\t\t\t\t\tSign Out\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tshape='round'\n\t\t\t\t\ticon={<GoogleOutlined />}\n\t\t\t\t\tdanger\n\t\t\t\t\tonClick={this.onSignInClick}\n\t\t\t\t>\n\t\t\t\t\tSign In with Google\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div>{this.renderAuthButton()}</div>;\n\t}\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}